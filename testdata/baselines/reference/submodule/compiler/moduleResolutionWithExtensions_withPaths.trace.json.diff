--- old.moduleResolutionWithExtensions_withPaths.trace.json
+++ new.moduleResolutionWithExtensions_withPaths.trace.json
@@= skipped -0, +0 lines =@@
 ======== Resolving module 'foo/test.js' from '/test.ts'. ========
-Explicitly specified module resolution kind: 'Node10'.
-'baseUrl' option is set to '/', using this value to resolve non-relative module name 'foo/test.js'.
+Explicitly specified module resolution kind: 'Bundler'.
+Resolving in CJS mode with conditions 'import', 'types'.
 'paths' option is specified, looking for a pattern to match module name 'foo/test.js'.
 Module name 'foo/test.js', matched pattern 'foo/*'.
 Trying substitution 'node_modules/foo/lib/*', candidate module location: 'node_modules/foo/lib/test.js'.
-Loading module as file / folder, candidate module location '/node_modules/foo/lib/test.js', target file types: TypeScript, Declaration.
+Loading module as file / folder, candidate module location '/node_modules/foo/lib/test.js', target file types: TypeScript, JavaScript, Declaration, JSON.
 File name '/node_modules/foo/lib/test.js' has a '.js' extension - stripping it.
 File '/node_modules/foo/lib/test.ts' does not exist.
 File '/node_modules/foo/lib/test.tsx' does not exist.
@@= skipped -12, +12 lines =@@
 Resolving real path for '/node_modules/foo/lib/test.d.ts', result '/node_modules/foo/lib/test.d.ts'.
 ======== Module name 'foo/test.js' was successfully resolved to '/node_modules/foo/lib/test.d.ts'. ========
 ======== Resolving module 'foo/test' from '/test.ts'. ========
-Explicitly specified module resolution kind: 'Node10'.
-'baseUrl' option is set to '/', using this value to resolve non-relative module name 'foo/test'.
+Explicitly specified module resolution kind: 'Bundler'.
+Resolving in CJS mode with conditions 'import', 'types'.
 'paths' option is specified, looking for a pattern to match module name 'foo/test'.
 Module name 'foo/test', matched pattern 'foo/*'.
 Trying substitution 'node_modules/foo/lib/*', candidate module location: 'node_modules/foo/lib/test'.
-Loading module as file / folder, candidate module location '/node_modules/foo/lib/test', target file types: TypeScript, Declaration.
+Loading module as file / folder, candidate module location '/node_modules/foo/lib/test', target file types: TypeScript, JavaScript, Declaration, JSON.
 File '/node_modules/foo/lib/test.ts' does not exist.
 File '/node_modules/foo/lib/test.tsx' does not exist.
 File '/node_modules/foo/lib/test.d.ts' exists - use it as a name resolution result.
@@= skipped -13, +13 lines =@@
 Resolving real path for '/node_modules/foo/lib/test.d.ts', result '/node_modules/foo/lib/test.d.ts'.
 ======== Module name 'foo/test' was successfully resolved to '/node_modules/foo/lib/test.d.ts'. ========
 ======== Resolving module './relative.js' from '/test.ts'. ========
-Explicitly specified module resolution kind: 'Node10'.
-Loading module as file / folder, candidate module location '/relative.js', target file types: TypeScript, Declaration.
+Explicitly specified module resolution kind: 'Bundler'.
+Resolving in CJS mode with conditions 'import', 'types'.
+Loading module as file / folder, candidate module location '/relative.js', target file types: TypeScript, JavaScript, Declaration, JSON.
 File name '/relative.js' has a '.js' extension - stripping it.
 File '/relative.ts' does not exist.
 File '/relative.tsx' does not exist.
 File '/relative.d.ts' exists - use it as a name resolution result.
 ======== Module name './relative.js' was successfully resolved to '/relative.d.ts'. ========
 ======== Resolving module './relative' from '/test.ts'. ========
-Explicitly specified module resolution kind: 'Node10'.
-Loading module as file / folder, candidate module location '/relative', target file types: TypeScript, Declaration.
+Explicitly specified module resolution kind: 'Bundler'.
+Resolving in CJS mode with conditions 'import', 'types'.
+Loading module as file / folder, candidate module location '/relative', target file types: TypeScript, JavaScript, Declaration, JSON.
 File '/relative.ts' does not exist.
 File '/relative.tsx' does not exist.
 File '/relative.d.ts' exists - use it as a name resolution result.
 ======== Module name './relative' was successfully resolved to '/relative.d.ts'. ========
-File '/node_modules/foo/lib/package.json' does not exist.
-File '/node_modules/foo/package.json' does not exist according to earlier cached lookups.
-File '/node_modules/package.json' does not exist.
-File '/package.json' does not exist.